on: push
jobs:
  gcc:
    uses: ./.github/workflows/common_cmake.yml
    with:
      c-compiler: gcc
      cpp-compiler: g++

  clang:
    uses: ./.github/workflows/common_cmake.yml
    with:
      c-compiler: clang
      cpp-compiler: clang++

  cl:
    uses: ./.github/workflows/common_cmake.yml
    with:
      c-compiler: cl
      cpp-compiler: cl
      os: windows-latest

  gcc-coverage:
    uses: ./.github/workflows/common_cmake.yml
    with:
      c-compiler: gcc
      cpp-compiler: g++
      build-type: Debug
      cmake-test-arguments: |
        -D BuildWithCoverage=ON
      artifacts-path: |
        **/*.gcda
        **/*.gcno
      artifacts-name: coverage-files
    secrets: inherit

  create-coverage-badge:
    runs-on: ubuntu-latest
    needs: [gcc-coverage]
    if: ${{ github.ref_name == 'main' || github.ref_name == '15-automate-code-coverage-badge' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-files

      - name: Install lcov
        run: sudo apt-get install lcov -y

      - name: Generate coverage.info
        run: lcov --capture --directory . --output-file coverage.info --ignore-errors mismatch,gcov,gcov,source

      - name: Get coverage percentage
        id: coverage
        run: |
          percent=$(lcov --list coverage.info | grep -oP '^\s*\d+\.\d+%' | head -n 1 | tr -d ' %')
          echo $percent
          echo "coverage-percent-value=${percent}" >> "$GITHUB_OUTPUT"

      - name: Build Coverage Badge
        uses: peterrhodesdev/build-a-badge@v1.3.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filename: "coverage-badge-data"
          label: "Coverage"
          message: "${{steps.coverage.outputs.coverage-percent-value}}"


