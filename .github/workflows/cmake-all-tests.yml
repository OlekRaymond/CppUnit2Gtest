name: BuildAndTest

on: push
jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      matrix:
        os: [ubuntu-22.04 ] # , windows-latest]
        build_type: [Debug, RelWithDebInfo]
        c_compiler: [gcc, clang] #, cl]
        include:
          # - os: windows-latest
            # c_compiler: cl
            # cpp_compiler: cl
          - os: ubuntu-22.04
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-22.04
            c_compiler: clang
            cpp_compiler: clang++
        # exclude:
          # - os: windows-latest
          #   c_compiler: gcc
          # - os: windows-latest
          #   c_compiler: clang
          # - os: ubuntu-latest
          #   c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        echo "install-dir=${{ github.workspace }}/installed" >> "$GITHUB_OUTPUT"
        echo "build-test-dir=${{ github.workspace }}/build_test" >> "$GITHUB_OUTPUT"



    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Install
      # Install our cmake package
      run: >
        cmake --install ${{ steps.strings.outputs.build-output-dir }}
        --config ${{ matrix.build_type }}
        --prefix ${{ steps.strings.outputs.install-dir }}

    - name: Test_Configure
      run: >
        cmake -B ${{ steps.strings.outputs.build-test-dir }}
        -S ${{ github.workspace }}/tests 
        -D BuildExamples=ON
        -D BuildInternalTests=ON
        -D CMAKE_PREFIX_PATH=${{ steps.strings.outputs.install-dir }}

    - name: Test_Build
      run: >
        cmake --build ${{ steps.strings.outputs.build-test-dir }}
        --config ${{ matrix.build_type }}

    - name: Run_Tests
      working-directory: ${{ steps.strings.outputs.build-test-dir }}
      # Execute tests. Note that --build-config is needed (see build)
      run: |
        ctest --build-config ${{ matrix.build_type }} --output-on-failure
